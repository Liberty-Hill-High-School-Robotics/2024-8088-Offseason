package frc.robot.commands;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj2.command.ConditionalCommand;
import edu.wpi.first.wpilibj2.command.ParallelCommandGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.robot.commands.IntakeCommands.IntakePivot.IntakePivotDown;
import frc.robot.commands.IntakeCommands.IntakePivot.IntakePivotUp;
import frc.robot.commands.IntakeCommands.IntakeRoller.IntakeRollerFeed;
import frc.robot.commands.IntakeCommands.IntakeRoller.IntakeRollerStop;
import frc.robot.commands.PivotCommmands.TRollers.TRollerFeed;
import frc.robot.commands.PivotCommmands.TRollers.TRollerStop;
import frc.robot.commands.StorageCommands.StorageRollersFeed;
import frc.robot.commands.StorageCommands.StorageRollersStop;
import frc.robot.subsystems.Intake;
import frc.robot.subsystems.Pivot;
import frc.robot.subsystems.Storage;

/**
 * A simple command that grabs a hatch with the {@link HatchSubsystem}. Written explicitly for
 * pedagogical purposes. Actual code should inline a command this simple with {@link
 * edu.wpi.first.wpilibj2.command.InstantCommand}.
 */
public class AutoIntake extends SequentialCommandGroup {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    private DigitalInput throughSensor = new DigitalInput(1);

    public AutoIntake(
        Intake intake,
        Storage storage,
        Pivot pivot
    ){
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS 
    if(throughSensor.get() == false){
        addCommands(
            new ParallelCommandGroup(
            new IntakePivotDown(intake),
            new IntakeRollerFeed(intake),
            new TRollerFeed(pivot),
            new StorageRollersFeed(storage)
            )
        );
    }
    else {
        addCommands(
            new ParallelCommandGroup(
            new IntakePivotUp(intake),
            new IntakeRollerStop(intake),
            new TRollerStop(pivot),
            new StorageRollersStop(storage)
            )
        );
    }
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}